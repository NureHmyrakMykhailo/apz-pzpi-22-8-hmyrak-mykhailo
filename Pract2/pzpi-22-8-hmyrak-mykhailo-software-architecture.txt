Міністерство освіти та науки України
Харківський національний університет радіоелектроніки
Кафедра програмної інженерії




Практична робота №2
з дисципліни: «Архітектура програмного забезпечення»












Виконав:                                                                     
ст. гр. ПЗПІ-22-8                                                             
Гмирак Михайло Дмитрович                                         

Перевірив:
ст. викладач кафедри ПІ
Сокорчук І.П.



Харків 2025

1 АРХІТЕКТУРА ВІДОМИХ ПРОГРАМНИХ СИСТЕМ
1.1 Історія змін 
     
     Зміни в документі нотуються до таблиці 1.1
     
Таблиця 1.1 – Історія змін 
№
Дата
Версія звіту
Опис змін та виправлень
1
13.04.2025
0.1
Створено розділ «Історія змін»
2
13.04.2025
0.1
Створено розділ «Мета роботи»
3
13.04.2025
0.1
Створено розділ «Опис виконаної роботи»
4
13.04.2025
0.1
Створено розділ «Висновки»
5
13.04.2025
0.1
Додано додаток А з посиланням на відеоролик
6
13.04.2025
0.1
Додано додаток Б зі слайдами презентації





















     1.2 Мета роботи
     
     
     Метою роботи є дослідити архітектуру програмної системи YouTube — однієї з найбільших у світі відеоплатформ. У межах роботи буде розглянуто ключові компоненти архітектури YouTube, що забезпечують її масштабованість, надійність, продуктивність і адаптивність до високого навантаження. Особлива увага приділяється структурі клієнтської та серверної частин, використанню сучасних технологій обробки даних, рекомендаційних систем, хмарного зберігання, а також впровадженню штучного інтелекту для персоналізації контенту.
     
     
     1.3 Опис виконаної роботи
     
     
     YouTube — глобальна відеоплатформа, яка дозволяє користувачам завантажувати, переглядати, коментувати й поширювати відеоконтент. Щохвилини на YouTube завантажується понад 500 годин відео, і щоденно здійснюються мільярди переглядів. Система працює з колосальними обсягами даних, підтримує мільйони одночасних з’єднань і використовує інтелектуальні алгоритми для обслуговування індивідуальних запитів користувачів у режимі реального часу.
     Ключові характеристики архітектури YouTube — це горизонтальна масштабованість, хмарне зберігання, розподілена обробка відео, системи кешування, пошукові механізми і система рекомендацій. Розподілена архітектура дозволяє автоматично адаптувати ресурси під змінне навантаження.
     Клієнтська частина реалізована за допомогою JavaScript-фреймворків (переважно React.js), що забезпечують адаптивність інтерфейсу під різні пристрої: ПК, смартфони, SmartTV. Кожен користувач бачить персоналізований інтерфейс із рекомендаціями, списками відтворення, історією переглядів.
     Серверна частина YouTube складається з:
     * Системи обробки відео — виконує транскодування у різні роздільності та формати (з використанням кодеків H.264, VP9, AV1);
     * Систем зберігання — Google Cloud Storage із географічною реплікацією, CDN-сервери для швидкої доставки контенту;
     * Баз даних — Google Spanner (для метаданих), NoSQL (для коментарів), Redis (для кешування);
     * Рекомендаційної системи — на основі алгоритмів машинного навчання, з використанням TensorFlow та моделей колаборативної фільтрації;
     * Пошукової інфраструктури — Elasticsearch для швидкої індексації та видачі результатів;
     * Модуля трансляцій (Live Streaming) — із підтримкою протоколів RTMP, HLS, DASH та з можливістю запису і трансляції у режимі реального часу.
     Система рекомендацій YouTube — одна з найпотужніших у світі. Вона аналізує сотні сигналів: перегляди, пошукові запити, вподобання, тривалість перегляду, історію підписок. Це забезпечує виняткову точність у доборі контенту.
     Пошуковий механізм базується на багатошаровій індексації відео та використанні алгоритмів обробки природної мови (NLP), що дозволяє враховувати помилки введення, контекст запиту й мову користувача.
     Сервери YouTube підтримують стрімінг у реальному часі та використовують алгоритми балансування навантаження, щоб уникати перевантаження під час пікових подій. Для цього застосовується архітектура мікросервісів та автоматичне масштабування.
     Щодо безпеки, YouTube використовує багаторівневу систему захисту: шифрування HTTPS, автентифікацію через Google-акаунт, автоматичну модерацію контенту, виявлення спаму, фільтрацію коментарів, виявлення авторських порушень та порушень політики спільноти.
     Інфраструктура також включає аналітичні сервіси, які відстежують перегляди, час утримання уваги, CTR, географію переглядів тощо. Автори каналів отримують детальну статистику для покращення свого контенту.
     Платформа постійно розвивається, інтегруючи новітні технології: штучний інтелект, edge computing, підтримку VR/AR, автоматичну генерацію субтитрів і перекладів, аналіз жестів і міміки для інклюзивності.
     
     
     1.4 Висновки
     
     
     YouTube — це приклад масштабної, гнучкої та інноваційної програмної системи. Її архітектура базується на сучасних технологіях хмарних обчислень, великих даних і штучного інтелекту. Завдяки мікросервісній структурі, CDN, кешуванню, потужним рекомендаційним системам та інструментам моніторингу, платформа забезпечує стабільну роботу для мільярдів користувачів.
     Розвиток YouTube триває — платформа впроваджує нові підходи до обробки мультимедійного контенту, покращення взаємодії з користувачами та забезпечення безпеки. YouTube слугує чудовим прикладом масштабованої та надійної архітектури, яку можна вивчати для проектування власних інформаційних систем.
      
     










     Додаток А
     Хронологічний опис та посилання
     
     
     Відеозапис доповіді на YouTube: https://youtu.be/mcwiizWsUwE
     
     Хронологічний опис доповіді:
     00:00 Вступна частина: представлення теми презентації  
     Короткий вступ, у якому пояснюється, про що буде презентація.
     00:39  Огляд архітектури YouTube
          Загальна структура системи. Розподілена хмарна архітектура, мікросервісний підхід, балансування навантаження, підтримка високої доступності, обробка великих даних і персоналізований контент.
     01:23  Інтерфейс користувача
          Фронтенд YouTube на базі React.js. Адаптивність до різних пристроїв. Компонентний підхід, персоналізовані головні сторінки та рекомендації. Інтеграція з іншими сервісами Google.
     02:17  Завантаження та кодування відео
          Прийом відео у різних форматах, паралельне транскодування у кілька роздільностей. Використання кодеків H.264, VP9, AV1. Генерація прев'ю, тайм-кодів та метаданих.
     03:22  Зберігання відео
          Зберігання у Google Cloud Storage із географічною реплікацією. Кешування через CDN, локалізація трафіку, система резервного копіювання для захисту від втрат.
     04:10  Бази даних
          Використання Google Spanner для структурованих метаданих. NoSQL (BigTable) для коментарів. Redis для кешу. Підтримка транзакцій, горизонтального масштабування, швидкого доступу.
     05:03  Система рекомендацій
          Рекомендаційні алгоритми на базі машинного навчання. Використання TensorFlow, облік переглядів, уподобань, історії пошуку. Колаборативна фільтрація та гібридні моделі.
     05:43  Пошук відео
          Побудова пошукового індексу через Elasticsearch. Миттєвий пошук, автозаповнення, обробка запитів на різних мовах. Персоналізовані результати, облік геолокації.
     06:08  Система трансляцій
           Live Streaming на основі RTMP, HLS, DASH. Масштабована підтримка одночасних глядачів, чат у реальному часі, запис трансляцій для подальшого перегляду.
     06:41  Монетизація
          Рекламна модель через AdSense. YouTube Premium для перегляду без реклами. Статистика доходів, суперчати, спонсорство, торгівля через платформу.
     07:18  Висновки
          Підсумок: YouTube як приклад сучасної, стійкої та гнучкої системи. Широке застосування ШІ, мікросервісів, edge computing. Плани на майбутнє.
     07:49 Використані джерела
          Перелік використаних матеріалів: офіційні блоги Google.
     07:58 Завершення
          Подяка за увагу, запрошення до запитань. Завершення виступу.
     
     




Додаток Б
Слайди презентації доповіді



Рисунок Б.1 – Титульний слайд


Рисунок Б.2 – Огляд архітектури YouTube

Рисунок Б.3 – Інтерфейс корустувача


Рисунок Б.4 – Завантаження та кодування відео


Рисунок Б.5 – Зберігання відео


Рисунок Б.6 – База даних

Рисунок Б.7 – Система рекомендацій


Рисунок Б.8 – Пошук Відео



Рисунок Б.9 – Система трансляцій


Рисунок Б.10 – Монетизація



Рисунок Б.11 – Висновки


Рисунок Б.12 –  Викорастені джерела



Рисунок Б.13 – Фінальний слайд
2


